apply plugin: 'com.android.application'
// INFO: insert your license here or set JWPLAYER_LICENSE_KEY as environment variable
def licenseKey = System.getenv('JWPLAYER_LICENSE_KEY')
// Detect if build is on Jenkins
def isJenkinsBuild = System.getenv("BUILD_NUMBER") != null
def props = new Properties()
if (isJenkinsBuild) {
    def propsFile = rootProject.file("/etc/android_sdk/keystore.properties")
    props.load(new FileInputStream(propsFile))
}
android {
	compileSdkVersion 33

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 32
		versionCode 1
		versionName "1.0"
		applicationId "com.jwplayer.chromecastdemo"
		buildConfigField "String", "JWPLAYER_LICENSE_KEY", """\"${licenseKey}\""""
	}
	compileOptions {
		sourceCompatibility 1.8
		targetCompatibility 1.8
	}
	signingConfigs {
		release {
			// Only attempt to read keystore.properties for Jenkins builds
			if (isJenkinsBuild) {
				storeFile = file(props['storeFile'])
				storePassword = props['storePassword']
				keyAlias = props['keyAlias']
				keyPassword = props['keyPassword']
			}
		}
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			if (isJenkinsBuild) {
				signingConfig signingConfigs.release
			}
		}
	}
}

ext.JWPlayerVersion = '4.10.2'
ext.exoplayerVersion = '2.18.3'

dependencies {
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	implementation 'androidx.appcompat:appcompat:1.4.1'
	implementation 'com.google.android.material:material:1.6.0'

	implementation "com.jwplayer:jwplayer-core:$JWPlayerVersion"
	implementation "com.jwplayer:jwplayer-common:$JWPlayerVersion"
	implementation "com.jwplayer:jwplayer-chromecast:$JWPlayerVersion"
	implementation "com.jwplayer:jwplayer-ima:$JWPlayerVersion"

//	//  Only needed when building with AAR instead
//	implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
//
//	//	implementation fileTree(dir: 'libs', include: 'jwplayer-common-4.10.2.aar')
//	//	implementation fileTree(dir: 'libs', include: 'jwplayer-core-4.10.2.aar')
//	//	implementation fileTree(dir: 'libs', include: 'jwplayer-chromecast-4.10.2.aar')
//	//	implementation fileTree(dir: 'libs', include: 'jwplayer-ima-4.10.2.aar')
//
//	implementation 'com.google.android.gms:play-services-cast-framework:21.2.0'
//	implementation 'androidx.webkit:webkit:1.6.0'
//	implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.29.0'
//	implementation "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion"
//	implementation "com.google.android.exoplayer:exoplayer-dash:$exoplayerVersion"
//	implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayerVersion"
//	implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoplayerVersion"
//	implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"
//	implementation 'com.squareup.picasso:picasso:2.71828'
//	implementation 'androidx.viewpager2:viewpager2:1.0.0'
//	implementation 'com.android.volley:volley:1.2.1'
//	implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
//	implementation 'androidx.recyclerview:recyclerview:1.2.1'
//
//	def lifecycle_version = "2.4.0"
//	implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
//	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

}