apply plugin: 'com.android.application'
// INFO: insert your license here or set JWPLAYER_LICENSE_KEY as environment variable
def licenseKey = System.getenv('JWPLAYER_LICENSE_KEY')
// Detect if build is on Jenkins
def isJenkinsBuild = System.getenv("BUILD_NUMBER") != null
def props = new Properties()
if (isJenkinsBuild) {
    def propsFile = rootProject.file("/etc/android_sdk/keystore.properties")
    props.load(new FileInputStream(propsFile))
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.jwplayer.demo.nativecontrols"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		buildConfigField "String", "JWPLAYER_LICENSE_KEY", """\"${licenseKey}\""""
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    signingConfigs {
        release {
            // Only attempt to read keystore.properties for Jenkins builds
            if (isJenkinsBuild) {
                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isJenkinsBuild) {
                signingConfig signingConfigs.release
            }
        }
    }
    namespace 'com.jwplayer.demo.nativecontrols'
}

dependencies {
    def sdkVersion = '4.20.0'
    implementation "com.jwplayer:jwplayer-core:${sdkVersion}"
    implementation "com.jwplayer:jwplayer-common:${sdkVersion}"

    def lifecycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))

////    //  Only needed when building with AAR instead
//    def media3version = '1.4.1'
////
//    implementation 'androidx.appcompat:appcompat:1.4.1'
////
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//	implementation 'com.google.android.gms:play-services-cast-framework:21.3.0'
//	implementation 'androidx.webkit:webkit:1.6.0'
//	implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.31.0'
//    implementation("androidx.media3:media3-exoplayer:$media3version")
//    implementation("androidx.media3:media3-exoplayer-dash:$media3version")
//    implementation("androidx.media3:media3-exoplayer-hls:$media3version")
//    implementation("androidx.media3:media3-exoplayer-smoothstreaming:$media3version")
//    implementation("androidx.media3:media3-ui:$media3version")
//	implementation 'com.squareup.picasso:picasso:2.71828'
//	implementation 'androidx.viewpager2:viewpager2:1.0.0'
//	implementation 'com.android.volley:volley:1.2.1'
//	implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
//	implementation 'androidx.recyclerview:recyclerview:1.2.1'
////
//    implementation fileTree(dir: 'libs', include: 'jwplayer-chromecast-generic-release.aar')
//	implementation fileTree(dir: 'libs', include: 'jwplayer-common-generic-release.aar')
//	implementation fileTree(dir: 'libs', include: 'jwplayer-core-generic-release.aar')
//	implementation fileTree(dir: 'libs', include: 'jwplayer-ima-generic-release.aar')
}